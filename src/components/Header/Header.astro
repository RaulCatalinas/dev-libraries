---
import GithubIcon from '@/icons/Github.astro';
import DevLiIcon from '@/icons/DevLi.astro';
import SearchIcon from '@/icons/Search.astro';
import DarkIcon from '@/icons/Dark.astro';
import LightIcon from '@/icons/Light.astro';
import HamburguerIcon from '@/icons/Hamburguer.astro';
import CloseIcon from '@/icons/Close.astro';
---

<nav
  class="bg-light-secondary border-b border-dark-paragraph px-4 py-2.5 dark:bg-dark-secondary dark:border-dark-tertiary fixed left-0 right-0 top-0 z-50"
>
  <div class="flex flex-wrap justify-between items-center px-8">
    <div class="flex justify-start items-center">
      <button
        class="p-2 mr-2 text-dark-border rounded-lg cursor-pointer md:hidden hover:text-dark-primary hover:bg-dark-paragraph focus:bg-dark-paragraph dark:focus:bg-dark-tertiary focus:ring-2 focus:ring-dark-paragraph dark:focus:ring-dark-tertiary dark:text-dark-subtitle dark:hover:bg-dark-tertiary dark:hover:text-light-secondary"
      >
        <HamburguerIcon />
        <CloseIcon />
        <span class="sr-only">Toggle sidebar</span>
      </button>
      <a href="/" class="flex items-center justify-between mr-4">
        <DevLiIcon class="size-10 mr-3" />
        <span
          class="self-center text-2xl font-semibold whitespace-nowrap text-green-light-primary dark:text-green-dark-primary"
          >Dev<span class="text-dark-secondary dark:text-light-secondary">Li</span></span
        >
      </a>
    </div>
    <div class="flex items-center lg:order-2 gap-4">
      <form action="#" method="GET" class="hidden md:block md:pl-2">
        <label for="topbar-search" class="sr-only">Search</label>
        <div class="relative md:w-96">
          <div class="flex absolute inset-y-0 left-0 items-center pl-3 pointer-events-none">
            <SearchIcon />
          </div>
          <input
            disabled="true"
            type="text"
            name="email"
            id="topbar-search"
            class="bg-light-primary border border-light-border text-dark-primary text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full pl-10 p-2.5 dark:bg-dark-tertiary dark:border-dark-border dark:placeholder-dark-subtitle dark:text-light-secondary dark:focus:ring-primary-500 dark:focus:border-primary-500"
            placeholder="Search(coming soon)"
          />
        </div>
      </form>
      <a
        href="https://github.com/polacodev/dev-libraries"
        aria-label="polaco github"
        target="_blank"
        rel="noopener noreferrer"
      >
        <button
          type="button"
          class="text-dark-secondary hover:bg-green-dark-primary dark:text-light-secondary dark:hover:text-dark-secondary rounded-lg text-sm p-2.5"
        >
          <GithubIcon />
        </button>
      </a>
      <button
        id="theme-toggle"
        type="button"
        class="text-dark-secondary hover:bg-green-dark-primary dark:text-light-secondary dark:hover:text-dark-secondary rounded-lg text-sm p-2.5"
      >
        <DarkIcon />
        <LightIcon />
      </button>
    </div>
  </div>
</nav>

<script>
  // On page load or when changing themes, best to add inline in `head` to avoid FOUC
  if (
    localStorage.getItem('color-theme') === 'dark' ||
    (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)
  ) {
    document.documentElement.classList.add('dark');
  } else {
    document.documentElement.classList.remove('dark');
  }

  var themeToggleDarkIcon = document.getElementById('theme-toggle-dark-icon');
  var themeToggleLightIcon = document.getElementById('theme-toggle-light-icon');

  // Change the icons inside the button based on previous settings
  if (
    localStorage.getItem('color-theme') === 'dark' ||
    (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)
  ) {
    themeToggleLightIcon?.classList.remove('hidden');
  } else {
    themeToggleDarkIcon?.classList.remove('hidden');
  }

  var themeToggleBtn = document.getElementById('theme-toggle');

  themeToggleBtn?.addEventListener('click', function () {
    // toggle icons inside button
    themeToggleDarkIcon?.classList.toggle('hidden');
    themeToggleLightIcon?.classList.toggle('hidden');

    // if set via local storage previously
    if (localStorage.getItem('color-theme')) {
      if (localStorage.getItem('color-theme') === 'light') {
        document.documentElement.classList.add('dark');
        localStorage.setItem('color-theme', 'dark');
      } else {
        document.documentElement.classList.remove('dark');
        localStorage.setItem('color-theme', 'light');
      }

      // if NOT set via local storage previously
    } else {
      if (document.documentElement.classList.contains('dark')) {
        document.documentElement.classList.remove('dark');
        localStorage.setItem('color-theme', 'light');
      } else {
        document.documentElement.classList.add('dark');
        localStorage.setItem('color-theme', 'dark');
      }
    }
  });
</script>
